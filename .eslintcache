[{"C:\\Users\\gilad\\Desktop\\humanz-project\\src\\index.js":"1","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\App.js":"2","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\Header.js":"3","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\ContactList.js":"4","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\AddContact.js":"5","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\ContactDetail.js":"6","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\EditContact.js":"7","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\api\\contacts.js":"8","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\context\\ContactsCrudContext.js":"9","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\ContactCard.js":"10"},{"size":218,"mtime":1643771415649,"results":"11","hashOfConfig":"12"},{"size":1363,"mtime":1643768550007,"results":"13","hashOfConfig":"12"},{"size":243,"mtime":1643769613181,"results":"14","hashOfConfig":"12"},{"size":1464,"mtime":1643769672419,"results":"15","hashOfConfig":"12"},{"size":2186,"mtime":1643791683241,"results":"16","hashOfConfig":"12"},{"size":798,"mtime":1643760973339,"results":"17","hashOfConfig":"12"},{"size":1507,"mtime":1643760973340,"results":"18","hashOfConfig":"12"},{"size":104,"mtime":1643791023907,"results":"19","hashOfConfig":"12"},{"size":1988,"mtime":1643766325821,"results":"20","hashOfConfig":"12"},{"size":1080,"mtime":1643791531028,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"q3zg2k",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gilad\\Desktop\\humanz-project\\src\\index.js",[],["45","46"],"C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\App.js",["47","48","49"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport api from \"../api/contacts\";\r\nimport Header from \"./Header\";\r\nimport AddContact from \"./AddContact\";\r\nimport ContactList from \"./ContactList\";\r\nimport ContactDetail from \"./ContactDetail\";\r\nimport EditContact from \"./EditContact\";\r\nimport { ContactsCrudContextProvider } from \"../context/ContactsCrudContext\";\r\n\r\nfunction App() {\r\n  // const updateContactHandler = async (contact) => {\r\n  //   const response = await api.put(`/contacts/${contact.id}`, contact);\r\n  //   const { id, name, email } = response.data;\r\n  //   setContacts(\r\n  //     contacts.map((contact) => {\r\n  //       return contact.id === id ? { ...response.data } : contact;\r\n  //     })\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <div className=\"ui container\">\r\n      <Router>\r\n        <Header />\r\n        <ContactsCrudContextProvider>\r\n          <Routes>\r\n            <Route path=\"/\" exact element={<ContactList />} />\r\n            <Route path=\"/add\" element={<AddContact />} />\r\n\r\n            <Route path=\"/edit\" element={<EditContact />} />\r\n\r\n            <Route path=\"/contact/:id\" element={<ContactDetail />} />\r\n          </Routes>\r\n        </ContactsCrudContextProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\Header.js",[],"C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\ContactList.js",["50","51"],"import React, { useRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContactsCrud } from \"../context/ContactsCrudContext\";\r\nimport ContactCard from \"./ContactCard\";\r\n\r\nconst ContactList = (props) => {\r\n  const {\r\n    contacts,\r\n    retrieveContacts,\r\n    searchTerm,\r\n    searchResults,\r\n    searchHandler,\r\n  } = useContactsCrud();\r\n\r\n  useEffect(() => {\r\n    retrieveContacts();\r\n  }, []);\r\n\r\n  const renderContactList = (\r\n    searchTerm.length < 1 ? contacts : searchResults\r\n  ).map((contact) => {\r\n    return <ContactCard contact={contact} key={contact.id} />;\r\n  });\r\n\r\n  const onUserSearch = (e) => {\r\n    searchHandler(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"main\">\r\n      <h2>\r\n        Client List\r\n        <Link to=\"/add\">\r\n          <button className=\"ui button blue right\">Add Client</button>\r\n        </Link>\r\n      </h2>\r\n      <div className=\"ui search\">\r\n        <div className=\"ui icon input\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Contacts\"\r\n            className=\"prompt\"\r\n            value={searchTerm}\r\n            onChange={(e) => onUserSearch(e)}\r\n          />\r\n          <i className=\"search icon\"></i>\r\n        </div>\r\n      </div>\r\n      <div className=\"ui celled list\">\r\n        {renderContactList.length > 0\r\n          ? renderContactList\r\n          : \"No Contacts available\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\AddContact.js",["52"],"C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\ContactDetail.js",[],"C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\EditContact.js",[],"C:\\Users\\gilad\\Desktop\\humanz-project\\src\\api\\contacts.js",[],"C:\\Users\\gilad\\Desktop\\humanz-project\\src\\context\\ContactsCrudContext.js",[],"C:\\Users\\gilad\\Desktop\\humanz-project\\src\\components\\ContactCard.js",["53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"63","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":11},{"ruleId":"58","severity":1,"message":"64","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":17,"column":6,"nodeType":"67","endLine":17,"endColumn":8,"suggestions":"68"},{"ruleId":"58","severity":1,"message":"69","line":6,"column":10,"nodeType":"60","messageId":"61","endLine":6,"endColumn":15},{"ruleId":"58","severity":1,"message":"70","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'api' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveContacts'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'email' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [retrieveContacts]",{"range":"76","text":"77"},[423,425],"[retrieveContacts]"]